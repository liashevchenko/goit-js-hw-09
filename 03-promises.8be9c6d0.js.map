{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,uBAClCC,EAAUF,SAASC,cAAc,sBACjCE,EAAYH,SAASC,cAAc,wBAmBzC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFO,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAqBX,QAAiBC,OAC5DK,EAAM,C,SAAEN,E,MAAUC,MAEpBQ,EAAAjB,GAASkB,OAAOE,QAAQ,sBAAoBZ,QAAeC,OAC3DM,EAAO,C,SAAEP,E,MAAUC,I,GAEpBA,EAAM,G,CA9BAN,SAASC,cAAc,QAE/BiB,iBAAiB,UAEtB,SAAgBC,GACdA,EAAMC,iBACN,MAAMC,EAASC,SAASnB,EAAUoB,MAAO,IACnCC,EAAOF,SAASpB,EAAQqB,MAAO,IAC/BjB,EAAQgB,SAASvB,EAASwB,MAAO,IAEvC,IAAK,IAAIE,EAAI,EAAGA,GAAKJ,EAAQI,IAC3BZ,YAAW,KAETT,EAAcqB,EAAE,EADKA,EAAID,EAAOlB,EACA,GAC/BmB,EAAID,E,IAqBXpB,EAAc,EAAG,MACdsB,MAAMH,IACNI,QAAQC,IAAIL,EAAM,IAElBM,OAAON,IACNI,QAAQC,IAAIL,EAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInp = document.querySelector('input[name=\"delay\"]');\nconst stepInp = document.querySelector('input[name=\"step\"]');\nconst amountInp = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', submit);\n\nfunction submit(event) {\n  event.preventDefault();\n  const amount = parseInt(amountInp.value, 10);\n  const step = parseInt(stepInp.value, 10);\n  const delay = parseInt(delayInp.value, 10);\n\n  for (let i = 0; i <= amount; i++) {\n    setTimeout(() => {\n      const currentDelay = i * step + delay;\n      createPromise(i+1, currentDelay);\n    }, i * step);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        resolve({ position, delay });\n      } else {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\ncreatePromise(2, 1500)\n  .then((value) => {\n   console.log(value);\n  })\n  .catch((value) => {\n    console.log(value);\n  });"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delayInp","document","querySelector","$47d4ff9957288465$var$stepInp","$47d4ff9957288465$var$amountInp","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","success","failure","addEventListener","event","preventDefault","amount","parseInt","value","step","i","then","console","log","catch"],"version":3,"file":"03-promises.8be9c6d0.js.map"}